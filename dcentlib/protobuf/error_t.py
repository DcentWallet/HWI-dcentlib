# Automatically generated by pb2py
# fmt: off
from .. import prototrez as p

if __debug__:
    try:
        from typing import Dict, List  # noqa: F401
        from typing_extensions import Literal  # noqa: F401
        EnumTypeerror_code_t = Literal[0, 1, 2, 3, 4, 5, 6, 7, 8, 65532, 65533, 65534, 65535]
    except ImportError:
        pass


class error_t(p.MessageType):

    def __init__(
        self,
        code: EnumTypeerror_code_t = None,
        message: str = None,
    ) -> None:
        self.code = code
        self.message = message

    @classmethod
    def get_fields(cls) -> Dict:
        return {
            1: ('code', p.EnumType("error_code_t", (0, 1, 2, 3, 4, 5, 6, 7, 8, 65532, 65533, 65534, 65535)), 0),  # required
            2: ('message', p.UnicodeType, 0),  # required
        }
