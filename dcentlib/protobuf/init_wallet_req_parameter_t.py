# Automatically generated by pb2py
# fmt: off
from .. import prototrez as p

if __debug__:
    try:
        from typing import Dict, List  # noqa: F401
        from typing_extensions import Literal  # noqa: F401
    except ImportError:
        pass


class init_wallet_req_parameter_t(p.MessageType):

    def __init__(
        self,
        mnemonic: List[str] = None,
    ) -> None:
        self.mnemonic = mnemonic if mnemonic is not None else []

    @classmethod
    def get_fields(cls) -> Dict:
        return {
            2: ('mnemonic', p.UnicodeType, p.FLAG_REPEATED),
        }
